2024-12-30 17:00:00.200 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:00.204 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:00.205 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:02.200 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:02.203 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:02.204 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:04.200 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:04.202 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:04.202 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:05.477 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:00:05.480 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:00:06.199 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:06.201 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:06.201 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:08.199 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:08.202 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:08.202 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:10.200 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:10.202 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:10.203 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:12.200 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:12.202 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:12.205 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:14.206 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:14.209 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:14.215 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:16.424 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:16.427 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:16.427 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:18.423 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:18.425 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:18.427 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:20.425 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:20.427 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:20.427 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:22.424 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:22.426 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:22.427 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:24.423 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:24.425 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:24.425 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:26.424 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:26.424 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:26.424 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:28.199 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:28.200 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:28.200 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:30.200 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:30.201 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:30.203 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:32.202 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:32.203 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:32.204 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:34.199 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:34.202 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:34.202 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:36.199 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:36.200 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:36.201 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:38.037 [info]  [ app.js:socketDisConnected ] transport close
2024-12-30 17:00:38.038 [info]  [ app.js:socketDisConnected ] 클라이언트 연결해제 [IP: ::ffff:192.168.0.72, 사용자: 정수빈]
2024-12-30 17:00:38.038 [info]  [ app.js:socketDisConnected ] 현재 연결된 사용자: 1명
2024-12-30 17:00:38.070 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:38.072 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:38.073 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:38.564 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:38.566 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:38.568 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:38.630 [info]  [ app.js:socketConnected ] 상담관리자: ms4 접속[::ffff:192.168.0.72]
2024-12-30 17:00:38.631 [info]  [ app.js:socketConnected ] 접속일시: 2024년 12월 30일 17시 00분 38초
2024-12-30 17:00:38.632 [info]  [ app.js:socketConnected ] 현재 연결된 사용자: 2명
2024-12-30 17:00:38.632 [info]  [ app.js:socketConnected ] 현재 연결된 사용자 ID: ms15,[object Object],ms4,[object Object]
2024-12-30 17:00:38.644 [info]  [ app.js:socketOnMessage ] 클라이언트 정상 응답 '상담관리자ms4 접속[::ffff:192.168.0.72]'
2024-12-30 17:00:38.644 [info]  [ app.js:socketOnMessage ] 클라이언트 정상 응답 '접속일시: 2024년 12월 30일 17시 00분 38초'
2024-12-30 17:00:40.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:40.540 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:40.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:42.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:42.540 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:42.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:44.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:44.541 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:44.541 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:46.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:46.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:46.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:48.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:48.543 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:48.544 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:50.540 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:50.541 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:50.542 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:52.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:52.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:52.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:54.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:54.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:54.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:56.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:56.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:56.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:00:58.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:00:58.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:00:58.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:00.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:00.540 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:00.542 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:02.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:02.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:02.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:04.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:04.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:04.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:05.478 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:01:05.478 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:01:06.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:06.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:06.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:08.541 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:08.541 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:08.542 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:10.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:10.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:10.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:12.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:12.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:12.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:14.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:14.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:14.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:16.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:16.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:16.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:18.539 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:18.541 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:18.541 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:20.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:20.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:20.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:22.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:22.541 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:22.541 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:24.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:24.540 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:24.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:26.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:26.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:26.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:28.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:28.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:28.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:30.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:30.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:30.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:32.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:32.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:32.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:34.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:34.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:34.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:36.543 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:36.547 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:36.549 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:38.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:38.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:38.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:40.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:40.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:40.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:42.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:42.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:42.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:44.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:44.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:44.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:46.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:46.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:46.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:48.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:48.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:48.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:50.543 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:50.545 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:50.546 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:52.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:52.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:52.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:54.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:54.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:54.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:56.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:56.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:56.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:01:58.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:01:58.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:01:58.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:00.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:00.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:00.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:02.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:02.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:02.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:04.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:04.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:04.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:05.478 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:02:05.479 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:02:06.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:06.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:06.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:08.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:08.538 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:08.539 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:10.538 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:10.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:10.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:12.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:12.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:12.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:14.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:14.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:14.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:16.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:16.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:16.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:18.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:18.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:18.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:20.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:20.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:20.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:22.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:22.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:22.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:24.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:24.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:24.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:26.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:26.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:26.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:28.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:28.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:28.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:30.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:30.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:30.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:32.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:32.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:32.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:34.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:34.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:34.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:36.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:36.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:36.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:38.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:38.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:38.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:40.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:40.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:40.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:42.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:42.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:42.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:44.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:44.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:44.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:46.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:46.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:46.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:48.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:48.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:48.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:50.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:50.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:50.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:52.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:52.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:52.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:54.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:54.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:54.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:56.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:56.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:56.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:02:58.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:02:58.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:02:58.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:00.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:00.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:00.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:02.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:02.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:02.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:04.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:04.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:04.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:05.478 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:03:05.478 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:03:06.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:06.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:06.537 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:08.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:08.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:08.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:10.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:10.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:10.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:12.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:12.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:12.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:14.537 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:14.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:14.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:16.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:16.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:16.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:18.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:18.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:18.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:20.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:20.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:20.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:22.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:22.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:22.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:24.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:24.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:24.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:26.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:26.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:26.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:28.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:28.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:28.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:30.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:30.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:30.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:32.558 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:32.558 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:32.560 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:34.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:34.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:34.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:36.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:36.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:36.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:38.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:38.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:38.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:40.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:40.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:40.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:42.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:42.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:42.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:44.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:44.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:44.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:46.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:46.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:46.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:48.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:48.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:48.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:50.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:50.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:50.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:52.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:52.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:52.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:54.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:54.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:54.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:56.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:56.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:56.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:03:58.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:03:58.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:03:58.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:00.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:00.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:00.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:02.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:02.539 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:02.540 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:04.536 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:04.537 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:04.538 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:05.479 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:04:05.480 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:04:06.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:06.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:06.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:08.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:08.536 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:08.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:10.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:10.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:10.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:12.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:12.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:12.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:14.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:14.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:14.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:16.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:16.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:16.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:18.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:18.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:18.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:20.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:20.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:20.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:22.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:22.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:22.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:24.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:24.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:24.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:26.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:26.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:26.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:28.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:28.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:28.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:30.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:30.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:30.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:32.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:32.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:32.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:34.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:34.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:34.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:36.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:36.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:36.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:38.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:38.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:38.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:40.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:40.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:40.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:42.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:42.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:42.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:44.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:44.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:44.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:46.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:46.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:46.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:48.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:48.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:48.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:50.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:50.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:50.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:52.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:52.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:52.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:54.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:54.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:54.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:56.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:56.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:56.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:04:58.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:04:58.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:04:58.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:00.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:00.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:00.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:02.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:02.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:02.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:04.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:04.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:04.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:05.480 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:05:05.481 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:05:06.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:06.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:06.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:08.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:08.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:08.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:10.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:10.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:10.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:12.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:12.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:12.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:14.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:14.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:14.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:16.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:16.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:16.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:18.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:18.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:18.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:20.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:20.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:20.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:22.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:22.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:22.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:24.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:24.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:24.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:26.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:26.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:26.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:28.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:28.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:28.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:30.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:30.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:30.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:32.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:32.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:32.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:34.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:34.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:34.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:36.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:36.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:36.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:38.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:38.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:38.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:40.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:40.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:40.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:42.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:42.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:42.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:44.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:44.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:44.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:46.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:46.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:46.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:48.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:48.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:48.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:50.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:50.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:50.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:52.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:52.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:52.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:54.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:54.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:54.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:56.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:56.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:56.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:05:58.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:05:58.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:05:58.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:00.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:00.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:00.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:02.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:02.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:02.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:04.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:04.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:04.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:05.480 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:06:05.481 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:06:06.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:06.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:06.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:08.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:08.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:08.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:10.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:10.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:10.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:12.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:12.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:12.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:14.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:14.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:14.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:16.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:16.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:16.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:18.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:18.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:18.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:20.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:20.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:20.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:22.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:22.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:22.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:24.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:24.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:24.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:26.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:26.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:26.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:28.534 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:28.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:28.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:30.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:30.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:30.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:32.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:32.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:32.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:34.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:34.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:34.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:36.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:36.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:36.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:38.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:38.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:38.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:40.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:40.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:40.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:42.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:42.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:42.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:44.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:44.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:44.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:46.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:46.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:46.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:48.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:48.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:48.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:50.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:50.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:50.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:52.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:52.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:52.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:54.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:54.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:54.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:56.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:56.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:56.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:06:58.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:06:58.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:06:58.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:00.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:00.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:00.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:02.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:02.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:02.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:04.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:04.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:04.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:05.481 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:07:05.481 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:07:06.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:06.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:06.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:08.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:08.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:08.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:10.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:10.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:10.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:12.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:12.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:12.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:14.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:14.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:14.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:16.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:16.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:16.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:18.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:18.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:18.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:20.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:20.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:20.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:22.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:22.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:22.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:24.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:24.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:24.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:26.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:26.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:26.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:28.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:28.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:28.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:30.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:30.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:30.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:32.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:32.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:32.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:34.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:34.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:34.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:36.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:36.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:36.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:38.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:38.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:38.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:40.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:40.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:40.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:42.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:42.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:42.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:44.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:44.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:44.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:46.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:46.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:46.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:48.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:48.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:48.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:50.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:50.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:50.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:52.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:52.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:52.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:54.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:54.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:54.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:56.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:56.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:56.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:07:58.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:07:58.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:07:58.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:00.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:00.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:00.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:02.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:02.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:02.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:04.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:04.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:04.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:05.481 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:08:05.483 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:08:06.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:06.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:06.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:08.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:08.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:08.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:10.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:10.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:10.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:12.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:12.524 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:12.524 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:14.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:14.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:14.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:16.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:16.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:16.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:18.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:18.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:18.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:20.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:20.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:20.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:22.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:22.524 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:22.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:24.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:24.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:24.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:26.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:26.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:26.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:28.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:28.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:28.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:30.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:30.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:30.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:32.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:32.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:32.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:34.549 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:34.549 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:34.550 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:36.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:36.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:36.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:38.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:38.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:38.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:40.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:40.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:40.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:42.523 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:42.523 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:42.523 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:44.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:44.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:44.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:46.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:46.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:46.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:48.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:48.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:48.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:50.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:50.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:50.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:52.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:52.524 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:52.524 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:54.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:54.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:54.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:56.524 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:56.524 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:56.524 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:08:58.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:08:58.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:08:58.525 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:00.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:00.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:00.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:02.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:02.525 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:02.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:04.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:04.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:04.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:05.482 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:09:05.484 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:09:06.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:06.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:06.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:08.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:08.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:08.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:10.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:10.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:10.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:12.525 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:12.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:12.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:14.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:14.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:14.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:16.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:16.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:16.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:18.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:18.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:18.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:20.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:20.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:20.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:22.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:22.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:22.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:24.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:24.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:24.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:26.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:26.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:26.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:28.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:28.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:28.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:30.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:30.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:30.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:32.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:32.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:32.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:34.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:34.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:34.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:36.526 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:36.526 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:36.526 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:38.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:38.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:38.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:40.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:40.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:40.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:42.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:42.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:42.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:44.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:44.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:44.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:46.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:46.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:46.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:48.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:48.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:48.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:50.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:50.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:50.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:52.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:52.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:52.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:54.527 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:54.527 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:54.527 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:56.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:56.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:56.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:09:58.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:09:58.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:09:58.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:00.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:00.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:00.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:02.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:02.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:02.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:04.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:04.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:04.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:05.482 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:10:05.482 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:10:06.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:06.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:06.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:08.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:08.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:08.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:10.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:10.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:10.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:12.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:12.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:12.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:14.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:14.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:14.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:16.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:16.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:16.528 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:18.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:18.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:18.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:20.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:20.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:20.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:22.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:22.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:22.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:24.528 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:24.528 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:24.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:26.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:26.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:26.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:28.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:28.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:28.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:30.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:30.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:30.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:32.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:32.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:32.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:34.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:34.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:34.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:36.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:36.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:36.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:38.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:38.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:38.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:40.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:40.529 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:40.529 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:42.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:42.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:42.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:44.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:44.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:44.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:46.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:46.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:46.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:48.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:48.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:48.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:50.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:50.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:50.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:52.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:52.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:52.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:54.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:54.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:54.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:56.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:56.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:56.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:10:58.529 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:10:58.530 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:10:58.530 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:00.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:00.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:00.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:02.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:02.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:02.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:04.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:04.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:04.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:05.496 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:11:05.497 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:11:06.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:06.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:06.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:08.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:08.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:08.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:10.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:10.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:10.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:12.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:12.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:12.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:14.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:14.534 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:14.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:16.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:16.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:16.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:18.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:18.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:18.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:20.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:20.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:20.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:22.530 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:22.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:22.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:24.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:24.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:24.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:26.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:26.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:26.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:28.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:28.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:28.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:30.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:30.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:30.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:32.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:32.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:32.531 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:34.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:34.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:34.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:36.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:36.531 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:36.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:38.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:38.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:38.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:40.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:40.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:40.536 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:42.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:42.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:42.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:44.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:44.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:44.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:46.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:46.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:46.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:48.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:48.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:48.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:50.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:50.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:50.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:52.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:52.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:52.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:54.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:54.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:54.533 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:56.531 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:56.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:56.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:11:58.535 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:11:58.535 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:11:58.535 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:00.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:00.532 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:00.532 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:02.532 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:02.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:02.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:04.533 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:04.533 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:04.534 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:05.497 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:12:05.498 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:12:07.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:07.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:07.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:09.417 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:09.417 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:09.417 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:11.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:11.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:11.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:13.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:13.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:13.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:15.417 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:15.417 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:15.417 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:17.417 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:17.417 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:17.417 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:19.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:19.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:19.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:21.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:21.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:21.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:23.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:23.420 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:23.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:25.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:25.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:25.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:27.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:27.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:27.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:29.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:29.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:29.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:31.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:31.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:31.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:33.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:33.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:33.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:35.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:35.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:35.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:37.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:37.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:37.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:39.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:39.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:39.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:41.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:41.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:41.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:43.424 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:43.424 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:43.424 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:45.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:45.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:45.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:47.420 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:47.421 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:47.421 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:49.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:49.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:49.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:51.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:51.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:51.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:53.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:53.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:53.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:55.418 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:55.418 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:55.418 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:57.421 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:57.422 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:57.422 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:12:59.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:12:59.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:12:59.419 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:13:01.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:13:01.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:13:01.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:13:03.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:13:03.419 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:13:03.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:13:05.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:13:05.420 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:13:05.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:13:05.498 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:13:05.500 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:13:50.427 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:13:50.427 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:13:50.428 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:14:05.499 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:14:05.499 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:14:50.430 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:14:50.430 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:14:50.430 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:15:05.498 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:15:05.498 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:15:50.429 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:15:50.429 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:15:50.429 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:16:05.500 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:16:05.500 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:16:50.428 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:16:50.429 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:16:50.429 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:17:05.500 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:17:05.501 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:17:50.426 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:17:50.428 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:17:50.428 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:18:05.499 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:18:05.499 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:18:50.433 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:18:50.433 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:18:50.433 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:19:05.500 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:19:05.500 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:19:50.427 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:19:50.428 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:19:50.428 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:20:05.499 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:20:05.500 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:20:50.427 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:20:50.427 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:20:50.427 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:21:05.501 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:21:05.501 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:21:50.429 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:21:50.430 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:21:50.430 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:22:05.501 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:22:05.501 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:22:20.223 [info]  [ app.js:socketDisConnected ] transport close
2024-12-30 17:22:20.224 [info]  [ app.js:socketDisConnected ] 클라이언트 연결해제 [IP: ::ffff:192.168.0.72, 사용자: 권태영]
2024-12-30 17:22:20.225 [info]  [ app.js:socketDisConnected ] 현재 연결된 사용자: 1명
2024-12-30 17:22:50.424 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:22:50.424 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:22:50.424 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:23:05.503 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:23:05.503 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:23:50.444 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:23:50.444 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:23:50.445 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:24:05.502 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:24:05.503 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:24:50.426 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:24:50.426 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:24:50.426 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:25:05.503 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:25:05.505 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:25:50.426 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:25:50.426 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:25:50.426 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:26:05.503 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:26:05.504 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:26:50.424 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:26:50.424 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:26:50.424 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:27:05.503 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:27:05.504 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:27:50.423 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:27:50.423 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:27:50.424 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:28:05.505 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:28:05.506 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:28:50.427 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:28:50.427 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:28:50.427 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:29:05.505 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:29:05.506 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:29:50.422 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:29:50.422 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:29:50.423 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:30:05.505 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:30:05.505 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:30:50.419 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:30:50.420 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:30:50.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:31:05.505 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:31:05.507 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:31:50.420 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:31:50.420 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:31:50.420 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:32:05.506 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:32:05.506 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:32:50.449 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:32:50.449 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:32:50.449 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:33:05.506 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:33:05.506 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:33:51.316 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:33:51.316 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:33:51.316 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:34:05.507 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:34:05.507 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:34:50.414 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:34:50.414 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:34:50.414 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:35:05.509 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:35:05.509 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:35:50.414 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:35:50.414 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:35:50.414 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:36:05.510 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:36:05.510 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:36:50.411 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:36:50.411 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:36:50.411 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:37:05.509 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:37:05.510 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:37:50.412 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:37:50.412 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:37:50.412 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:38:05.510 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:38:05.511 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:38:50.414 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:38:50.414 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:38:50.414 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:39:05.512 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:39:05.513 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:39:50.409 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:39:50.409 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:39:50.409 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:40:05.511 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:40:05.512 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:40:50.408 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:40:50.408 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:40:50.408 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:41:05.512 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:41:05.512 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:41:50.407 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:41:50.407 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:41:50.407 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:42:05.512 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:42:05.514 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:42:50.406 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:42:50.407 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:42:50.407 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:43:05.513 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:43:05.514 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:43:50.414 [info]  [ app.js:/workStatusMain ] 현재 경로: /workStatusMain
2024-12-30 17:43:50.414 [info]  [ app.js:workStatusMain ] need_coach
SELECT
            ecm.auto_seq,
            DATE_FORMAT(ecm.call_date, '%Y-%m-%d') as call_date,
            CONCAT(
                IFNULL(LEFT(ecm.call_time, 2), '00'), ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '00' 
                    ELSE '30' 
                END, '~',
                CASE
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' 
                    THEN IFNULL(LEFT(ecm.call_time, 2), '00')
                    ELSE LPAD(MOD(CAST(IFNULL(LEFT(ecm.call_time, 2), '00') AS UNSIGNED) + 1, 24), 2, '0')
                END, ':',
                CASE 
                    WHEN IFNULL(SUBSTRING(ecm.call_time, 3, 2), '00') <= '30' THEN '30' 
                    ELSE '00' 
                END
            ) AS time_range,
            ecm.call_time,
            ecm.login_id,
            (SELECT MAX(ui.user_name) FROM emo_user_info ui WHERE ui.login_id = ecm.login_id) AS user_name,
            ecm.auto_over_anger,
            ecm.agent_anger,
            ecm.auto_over_sad,
            ecm.agent_sad,
            ecm.auto_standard,
            COUNT(DISTINCT ecc.call_time) AS call_count,
            ecm.auto_coach,
            ecm.send_yn 
        FROM 
            ETRI_EMOTION.emo_coaching_message ecm
        LEFT JOIN ETRI_EMOTION.emo_call_count ecc
        ON ecm.call_date = ecc.call_date
            AND ecm.login_id = ecc.login_id
            AND ecc.call_time >= CONCAT(LEFT(ecm.call_time, 2), 
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '0000' ELSE '3000' END)
            AND ecc.call_time < CONCAT(
                CASE 
                    WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN LEFT(ecm.call_time, 2)
                    ELSE LPAD(MOD(CAST(LEFT(ecm.call_time, 2) AS UNSIGNED) + 1, 24), 2, '0')
                END,
                CASE WHEN SUBSTRING(ecm.call_time, 3, 2) <= '30' THEN '3000' ELSE '0000' END
            )
        WHERE ecm.call_date = ?
        AND ecm.auto_coach = 'P'
        AND ecm.send_yn = 'N'
        GROUP BY 
            ecm.call_date, ecm.call_time,
            ecm.login_id, ecm.auto_standard,
            ecm.agent_sad, ecm.agent_anger
        ORDER BY 
            ecm.call_date, ecm.call_time, ecm.login_id;
2024-12-30 17:43:50.414 [info]  [ app.js:workStatusMain ] notPresent_agent
SELECT eui.user_name, eui.login_id
        FROM emo_user_info eui
        WHERE eui.user_name NOT IN (
            SELECT JSON_UNQUOTE(JSON_EXTRACT(data, '$.user.user_name')) as user_name
            FROM sessions
            WHERE expires > UNIX_TIMESTAMP()
            AND JSON_EXTRACT(data, '$.user') IS NOT NULL
            AND JSON_EXTRACT(data, '$.user.group_manager') = 'N'
        )
        AND eui.group_manager = 'N'
        AND eui.user_type != '3'
        ORDER BY eui.user_name;
2024-12-30 17:44:05.514 [info]  [ app.js:EnhancedFSWatcher ] No delay metrics available yet
2024-12-30 17:44:05.514 [info]  [ app.js:watchDirectory ] File System Metrics:
                        Average Delay: 0.00ms
                        Success Rate: 0.00% 
                        Current Polling Interval: 100ms
                        Total Events: 0
2024-12-30 17:44:19.871 [info]  [ watchDirectory:processSIGINT ] Received SIGINT. Cleaning up...
